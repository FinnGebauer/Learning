#Brian is a Product Manager at FarmBurg, a company that makes a farming simulation social network game. In the FarmBurg game, you can plow, plant, and harvest different crops.

#Today, you will be acting as Brian’s data analyst for an A/B Test that he has been conducting.

#Brian tells you that he ran an A/B test with three different groups: A, B, and C. You’re kind of busy today, so you don’t ask too many questions about the differences between A, B, and C. Maybe they were shown three different versions of an ad. Who cares?
import pandas as pd
from scipy.stats import chi2_contingency
from scipy.stats import binom_test

df = pd.read_csv('clicks.csv')
print(df.head())

#define a new column checking for purchase status
df['is_purchase'] = df.click_day.apply(lambda x: 'Purchase' if pd.notnull(x) else 'No Purchase')

#count the number of users who made a purchase from each group
purchase_counts = df.groupby(['group', 'is_purchase']).user_id.count().reset_index()
print(purchase_counts)

#fill out contingency table in preparation for chi square test
contingency = [[316, 1350],
               [183, 1483],
               [83, 1583]]

#perform chi square test, save only pvalue
_, pvalue, _, _ = chi2_contingency(contingency)
print(pvalue)

is_significant = True

#Calculating Necessary Purchase Rates
#The AB Test has actually been conducted with different price points, so we ran the wrong test, it has to be a binomial test on each group
#number of visits
num_visits = len(df)

#calculate number of visits needed for certain price points to reach 1000$ target
p_clicks_099 = (1000/0.99) / num_visits
p_clicks_199 = (1000/1.99) / num_visits
p_clicks_499 = (1000/4.99) / num_visits

#Binomial test for Group A
x = 316
n = 1350+316
p = p_clicks_099
pvalueA = binom_test(x, n, p)

#Binomial test for Group B
x = 183
n = 1483+183
p = p_clicks_199
pvalueB = binom_test(x, n, p)

#Binomial test for Group C
x = 83
n = 1583+83
p = p_clicks_499
pvalueC = binom_test(x, n, p)

print(pvalueA, pvalueB, pvalueC)
final_answer = 4.99
